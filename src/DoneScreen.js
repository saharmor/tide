import React, { useState } from "react";
import SocialShare from "./SocialShare"
import Row from 'react-bootstrap/Row'
import Col from 'react-bootstrap/Col'
import Button from 'react-bootstrap/Button'
import Form from 'react-bootstrap/Form'
import FormControl from 'react-bootstrap/FormControl'
import { InputGroup } from "react-bootstrap";


const DoneScreen = ({ isFinishedAll, score, playAgain, emailUrl, sessionId }) => {
  const [isEmailSubmitted, setIsEmailSubmitted] = useState(false);
  const [email, setEmail] = useState('')

  async function saveEmail() {
    const params = {
      "email": email,
      "sessionId": sessionId,
    }

    await fetch(emailUrl, { // TODO handle errors
      method: 'POST',
      body: JSON.stringify(params),
    })
  }

  function handleSubmit(e) {
    e.preventDefault();
    setIsEmailSubmitted(true)
    saveEmail()
  }


  return (
    <Row className="justify-content-center text-center">
      <Col xs={12}>Done! Your score: <h1 className="text-success">{score}</h1></Col>
      <Col xs={12}>Challenge your friends&nbsp;
        <SocialShare sessionId={sessionId} url={"https://thisimagedoesnotexist.com"}
          title={`Can you tell if an image was generated by a human or a machine? I scored ${score}!`} />
      </Col>
      <Row className="my-2 justify-content-center">
        {!isEmailSubmitted &&
          <>
            <Col xs={12} className="justify-content-center align-items-center d-flex">
              <Form.Label htmlFor="email" className="text-muted">Know about new images and models. No spam!</Form.Label>
            </Col>
            <Col className="flex-grow-1 align-items-center">
              <Form className="d-flex justify-content-center" onSubmit={handleSubmit}>
                <Col lg={4}>
                  <InputGroup className="d-flex">
                    <FormControl id="email" type="email" placeholder="Email" aria-label="Email"
                      aria-describedby="submit-addon" onChange={(e, updatedAt) => setEmail(e.target.value)} />
                    <Button id="submit-addon" variant="outline-primary" type="submit">Submit</Button>
                  </InputGroup>
                </Col>
              </Form>
            </Col>
          </>}
        {isEmailSubmitted && <span>Stay tuned!</span>}
      </Row>
      {!isFinishedAll && <Col xs={12} className="pt-2">
        <Button className="btn-large" variant="primary" onClick={playAgain}>Play again with new images</Button>
      </Col>}
    </Row>
  );

}

export default DoneScreen;
